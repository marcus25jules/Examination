{"ast":null,"code":"/**\n * ## Imports\n *\n * The actions supported\n */\nvar _require$default = require(\"../../constants/Customer\").default,\n    CUSTOMER = _require$default.CUSTOMER,\n    ON_FORM_FIELD_CHANGE = _require$default.ON_FORM_FIELD_CHANGE,\n    CUSTOMER_SUCCESS = _require$default.CUSTOMER_SUCCESS;\n\nexport function customerState() {\n  return {\n    type: CUSTOMER\n  };\n}\nexport function customerSuccess(json) {\n  return {\n    type: CUSTOMER_SUCCESS,\n    payload: json\n  };\n}\nexport function onFormFieldChange(field, value) {\n  return {\n    type: ON_FORM_FIELD_CHANGE,\n    payload: {\n      field: field,\n      value: value\n    }\n  };\n}\nexport function getContacts() {\n  return function (dispatch, getState) {\n    var fields = getState().contact.form.fields;\n    return fields.data;\n  };\n}\nexport function addEditContact(form) {\n  return function (dispatch, getState) {\n    var fields = getState().contact.form.fields;\n\n    if (typeof form.id !== \"undefined\") {\n      var index = fields.data.findIndex(function (c) {\n        return String(c.id) === String(form.id);\n      });\n      fields.data[index] = form;\n    } else {\n      form.id = fields.lastId;\n      fields.data.push(form);\n      dispatch(onFormFieldChange(\"lastId\", fields.lastId + 1));\n    }\n  };\n}\nexport function deleteContact(id) {\n  return function (dispatch, getState) {\n    var fields = getState().contact.form.fields;\n\n    if (typeof id !== \"undefined\") {\n      var index = fields.data.findIndex(function (c) {\n        return String(c.id) === String(id);\n      });\n\n      if (index !== -1) {\n        fields.data.splice(index, 1);\n        dispatch(contactSuccess(fields.data));\n      }\n    }\n  };\n}","map":{"version":3,"sources":["/Users/macoybayona/Documents/MyProjects/Examination/src/reducers/customer/actions.js"],"names":["require","default","CUSTOMER","ON_FORM_FIELD_CHANGE","CUSTOMER_SUCCESS","customerState","type","customerSuccess","json","payload","onFormFieldChange","field","value","getContacts","dispatch","getState","fields","contact","form","data","addEditContact","id","index","findIndex","c","String","lastId","push","deleteContact","splice","contactSuccess"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,uBAIIA,OAAO,CAAC,0BAAD,CAAP,CAAoCC,OAJxC;AAAA,IACEC,QADF,oBACEA,QADF;AAAA,IAEEC,oBAFF,oBAEEA,oBAFF;AAAA,IAGEC,gBAHF,oBAGEA,gBAHF;;AAMA,OAAO,SAASC,aAAT,GAAyB;AAC9B,SAAO;AACLC,IAAAA,IAAI,EAAEJ;AADD,GAAP;AAGD;AAED,OAAO,SAASK,eAAT,CAAyBC,IAAzB,EAA+B;AACpC,SAAO;AACLF,IAAAA,IAAI,EAAEF,gBADD;AAELK,IAAAA,OAAO,EAAED;AAFJ,GAAP;AAID;AAED,OAAO,SAASE,iBAAT,CAA2BC,KAA3B,EAAkCC,KAAlC,EAAyC;AAC9C,SAAO;AACLN,IAAAA,IAAI,EAAEH,oBADD;AAELM,IAAAA,OAAO,EAAE;AAAEE,MAAAA,KAAK,EAAEA,KAAT;AAAgBC,MAAAA,KAAK,EAAEA;AAAvB;AAFJ,GAAP;AAID;AAED,OAAO,SAASC,WAAT,GAAuB;AAC5B,SAAO,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAC7B,QAAIC,MAAM,GAAGD,QAAQ,GAAGE,OAAX,CAAmBC,IAAnB,CAAwBF,MAArC;AACA,WAAOA,MAAM,CAACG,IAAd;AACD,GAHD;AAID;AAED,OAAO,SAASC,cAAT,CAAwBF,IAAxB,EAA8B;AACnC,SAAO,UAACJ,QAAD,EAAWC,QAAX,EAAwB;AAC7B,QAAIC,MAAM,GAAGD,QAAQ,GAAGE,OAAX,CAAmBC,IAAnB,CAAwBF,MAArC;;AAEA,QAAI,OAAOE,IAAI,CAACG,EAAZ,KAAmB,WAAvB,EAAoC;AAClC,UAAIC,KAAK,GAAGN,MAAM,CAACG,IAAP,CAAYI,SAAZ,CACV,UAACC,CAAD;AAAA,eAAOC,MAAM,CAACD,CAAC,CAACH,EAAH,CAAN,KAAiBI,MAAM,CAACP,IAAI,CAACG,EAAN,CAA9B;AAAA,OADU,CAAZ;AAGAL,MAAAA,MAAM,CAACG,IAAP,CAAYG,KAAZ,IAAqBJ,IAArB;AACD,KALD,MAKO;AACLA,MAAAA,IAAI,CAACG,EAAL,GAAUL,MAAM,CAACU,MAAjB;AACAV,MAAAA,MAAM,CAACG,IAAP,CAAYQ,IAAZ,CAAiBT,IAAjB;AACAJ,MAAAA,QAAQ,CAACJ,iBAAiB,CAAC,QAAD,EAAWM,MAAM,CAACU,MAAP,GAAgB,CAA3B,CAAlB,CAAR;AACD;AACF,GAbD;AAcD;AAED,OAAO,SAASE,aAAT,CAAuBP,EAAvB,EAA2B;AAChC,SAAO,UAACP,QAAD,EAAWC,QAAX,EAAwB;AAC7B,QAAIC,MAAM,GAAGD,QAAQ,GAAGE,OAAX,CAAmBC,IAAnB,CAAwBF,MAArC;;AAEA,QAAI,OAAOK,EAAP,KAAc,WAAlB,EAA+B;AAC7B,UAAIC,KAAK,GAAGN,MAAM,CAACG,IAAP,CAAYI,SAAZ,CAAsB,UAACC,CAAD;AAAA,eAAOC,MAAM,CAACD,CAAC,CAACH,EAAH,CAAN,KAAiBI,MAAM,CAACJ,EAAD,CAA9B;AAAA,OAAtB,CAAZ;;AACA,UAAIC,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChBN,QAAAA,MAAM,CAACG,IAAP,CAAYU,MAAZ,CAAmBP,KAAnB,EAA0B,CAA1B;AACAR,QAAAA,QAAQ,CAACgB,cAAc,CAACd,MAAM,CAACG,IAAR,CAAf,CAAR;AACD;AACF;AACF,GAVD;AAWD","sourcesContent":["/**\n * ## Imports\n *\n * The actions supported\n */\nconst {\n  CUSTOMER,\n  ON_FORM_FIELD_CHANGE,\n  CUSTOMER_SUCCESS\n} = require(\"../../constants/Customer\").default;\n\nexport function customerState() {\n  return {\n    type: CUSTOMER\n  };\n}\n\nexport function customerSuccess(json) {\n  return {\n    type: CUSTOMER_SUCCESS,\n    payload: json\n  };\n}\n\nexport function onFormFieldChange(field, value) {\n  return {\n    type: ON_FORM_FIELD_CHANGE,\n    payload: { field: field, value: value }\n  };\n}\n\nexport function getContacts() {\n  return (dispatch, getState) => {\n    var fields = getState().contact.form.fields;\n    return fields.data;\n  };\n}\n\nexport function addEditContact(form) {\n  return (dispatch, getState) => {\n    var fields = getState().contact.form.fields;\n\n    if (typeof form.id !== \"undefined\") {\n      var index = fields.data.findIndex(\n        (c) => String(c.id) === String(form.id)\n      );\n      fields.data[index] = form;\n    } else {\n      form.id = fields.lastId;\n      fields.data.push(form);\n      dispatch(onFormFieldChange(\"lastId\", fields.lastId + 1));\n    }\n  };\n}\n\nexport function deleteContact(id) {\n  return (dispatch, getState) => {\n    var fields = getState().contact.form.fields;\n\n    if (typeof id !== \"undefined\") {\n      var index = fields.data.findIndex((c) => String(c.id) === String(id));\n      if (index !== -1) {\n        fields.data.splice(index, 1);\n        dispatch(contactSuccess(fields.data));\n      }\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}