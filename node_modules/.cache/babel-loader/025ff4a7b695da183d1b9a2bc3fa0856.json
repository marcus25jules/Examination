{"ast":null,"code":"/**\n * ## Imports\n *\n * The actions supported\n */var InitialState=require(\"./initialState\").default;var _require$default=require(\"../../constants/Customer\").default,ON_FORM_FIELD_CHANGE=_require$default.ON_FORM_FIELD_CHANGE,CUSTOMER_SUCCESS=_require$default.CUSTOMER_SUCCESS,CUSTOMER_REQUEST=_require$default.CUSTOMER_REQUEST;var initialState=new InitialState();/**\n * ## Customer Reducer function\n * @param {Object} state - initialState\n * @param {Object} action - type and payload\n */export default function customerReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;if(!(state instanceof InitialState))return initialState.merge(state);switch(action.type){case CUSTOMER_SUCCESS:return state.setIn([\"form\",\"fields\",\"data\"],action.payload).setIn([\"form\",\"isFetching\"],false);case CUSTOMER_REQUEST:return state.setIn([\"form\",\"isFetching\"],true);case ON_FORM_FIELD_CHANGE:var _action$payload=action.payload,field=_action$payload.field,value=_action$payload.value;return state.setIn([\"form\",\"fields\",field],value);default:break;}return state;}","map":{"version":3,"sources":["/Users/macoybayona/Documents/MyProjects/Examination/src/reducers/customer/reducer.js"],"names":["InitialState","require","default","ON_FORM_FIELD_CHANGE","CUSTOMER_SUCCESS","CUSTOMER_REQUEST","initialState","customerReducer","state","action","merge","type","setIn","payload","field","value"],"mappings":"AAAA;AACA;AACA;AACA;AACA,GACA,GAAMA,CAAAA,YAAY,CAAGC,OAAO,CAAC,gBAAD,CAAP,CAA0BC,OAA/C,CAEA,qBAIID,OAAO,CAAC,0BAAD,CAAP,CAAoCC,OAJxC,CACEC,oBADF,kBACEA,oBADF,CAEEC,gBAFF,kBAEEA,gBAFF,CAGEC,gBAHF,kBAGEA,gBAHF,CAMA,GAAMC,CAAAA,YAAY,CAAG,GAAIN,CAAAA,YAAJ,EAArB,CAEA;AACA;AACA;AACA;AACA,GAEA,cAAe,SAASO,CAAAA,eAAT,EAAuD,IAA9BC,CAAAA,KAA8B,2DAAtBF,YAAsB,IAARG,CAAAA,MAAQ,2CACpE,GAAI,EAAED,KAAK,WAAYR,CAAAA,YAAnB,CAAJ,CAAsC,MAAOM,CAAAA,YAAY,CAACI,KAAb,CAAmBF,KAAnB,CAAP,CAEtC,OAAQC,MAAM,CAACE,IAAf,EACE,IAAKP,CAAAA,gBAAL,CACE,MAAOI,CAAAA,KAAK,CAACI,KAAN,CAAY,CAAC,MAAD,CAAS,QAAT,CAAmB,MAAnB,CAAZ,CAAwCH,MAAM,CAACI,OAA/C,EACJD,KADI,CACE,CAAC,MAAD,CAAS,YAAT,CADF,CAC0B,KAD1B,CAAP,CAGF,IAAKP,CAAAA,gBAAL,CACE,MAAOG,CAAAA,KAAK,CAACI,KAAN,CAAY,CAAC,MAAD,CAAS,YAAT,CAAZ,CAAoC,IAApC,CAAP,CAEF,IAAKT,CAAAA,oBAAL,CACE,oBAAyBM,MAAM,CAACI,OAAhC,CAAQC,KAAR,iBAAQA,KAAR,CAAeC,KAAf,iBAAeA,KAAf,CACA,MAAOP,CAAAA,KAAK,CAACI,KAAN,CAAY,CAAC,MAAD,CAAS,QAAT,CAAmBE,KAAnB,CAAZ,CAAuCC,KAAvC,CAAP,CAEF,QACE,MAbJ,CAgBA,MAAOP,CAAAA,KAAP,CACD","sourcesContent":["/**\n * ## Imports\n *\n * The actions supported\n */\nconst InitialState = require(\"./initialState\").default;\n\nconst {\n  ON_FORM_FIELD_CHANGE,\n  CUSTOMER_SUCCESS,\n  CUSTOMER_REQUEST\n} = require(\"../../constants/Customer\").default;\n\nconst initialState = new InitialState();\n\n/**\n * ## Customer Reducer function\n * @param {Object} state - initialState\n * @param {Object} action - type and payload\n */\n\nexport default function customerReducer(state = initialState, action) {\n  if (!(state instanceof InitialState)) return initialState.merge(state);\n\n  switch (action.type) {\n    case CUSTOMER_SUCCESS:\n      return state.setIn([\"form\", \"fields\", \"data\"], action.payload)\n        .setIn([\"form\", \"isFetching\"], false);\n\n    case CUSTOMER_REQUEST:\n      return state.setIn([\"form\", \"isFetching\"], true);\n\n    case ON_FORM_FIELD_CHANGE:\n      const { field, value } = action.payload;\n      return state.setIn([\"form\", \"fields\", field], value);\n\n    default:\n      break;\n  }\n\n  return state;\n}\n"]},"metadata":{},"sourceType":"module"}