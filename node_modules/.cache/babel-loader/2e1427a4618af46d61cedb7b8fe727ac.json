{"ast":null,"code":"/**\n * ## Imports\n *\n * The actions supported\n */\nvar _require$default = require(\"../../constants/Customer\").default,\n    CUSTOMER = _require$default.CUSTOMER,\n    ON_FORM_FIELD_CHANGE = _require$default.ON_FORM_FIELD_CHANGE,\n    CUSTOMER_SUCCESS = _require$default.CUSTOMER_SUCCESS,\n    CUSTOMER_REQUEST = _require$default.CUSTOMER_REQUEST;\n\nimport { api } from \"../../lib/Api\";\nimport CONSTANTS from \"../../lib/constants\";\nexport function customerState() {\n  return {\n    type: CUSTOMER\n  };\n}\nexport function customerSuccess(json) {\n  return {\n    type: CUSTOMER_SUCCESS,\n    payload: json\n  };\n}\nexport function customerRequest() {\n  return {\n    type: CUSTOMER_REQUEST\n  };\n}\nexport function onFormFieldChange(field, value) {\n  return {\n    type: ON_FORM_FIELD_CHANGE,\n    payload: {\n      field: field,\n      value: value\n    }\n  };\n}\nexport function getCustomers() {\n  return function (dispatch, getState) {\n    var fields = getState().customer.form.fields;\n    dispatch(customerRequest());\n    api.get(null, CONSTANTS.ALL_CUSTOMER).then(function (response) {\n      if (typeof response !== 'undefined') {\n        if (response.length > 0) {\n          dispatch(customerSuccess(response));\n        }\n      }\n    }).catch(function (err) {});\n  };\n}\nexport function addCustomer(form) {\n  return function (dispatch, getState) {\n    var fields = getState().customer.form.fields;\n    api.post(fields, CONSTANTS.ADD_CUSTOMER).then(function (response) {\n      if (typeof response !== 'undefined') {\n        if (response.length > 0) {\n          dispatch(customerSuccess(response));\n        }\n      }\n    }).catch(function (err) {});\n  };\n}","map":{"version":3,"sources":["/Users/macoybayona/Documents/MyProjects/Examination/src/reducers/customer/actions.js"],"names":["require","default","CUSTOMER","ON_FORM_FIELD_CHANGE","CUSTOMER_SUCCESS","CUSTOMER_REQUEST","api","CONSTANTS","customerState","type","customerSuccess","json","payload","customerRequest","onFormFieldChange","field","value","getCustomers","dispatch","getState","fields","customer","form","get","ALL_CUSTOMER","then","response","length","catch","err","addCustomer","post","ADD_CUSTOMER"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,uBAKIA,OAAO,CAAC,0BAAD,CAAP,CAAoCC,OALxC;AAAA,IACEC,QADF,oBACEA,QADF;AAAA,IAEEC,oBAFF,oBAEEA,oBAFF;AAAA,IAGEC,gBAHF,oBAGEA,gBAHF;AAAA,IAIEC,gBAJF,oBAIEA,gBAJF;;AAQA,SAAQC,GAAR,QAAkB,eAAlB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AAEA,OAAO,SAASC,aAAT,GAAyB;AAC9B,SAAO;AACLC,IAAAA,IAAI,EAAEP;AADD,GAAP;AAGD;AAED,OAAO,SAASQ,eAAT,CAAyBC,IAAzB,EAA+B;AACpC,SAAO;AACLF,IAAAA,IAAI,EAAEL,gBADD;AAELQ,IAAAA,OAAO,EAAED;AAFJ,GAAP;AAID;AAED,OAAO,SAASE,eAAT,GAA2B;AAChC,SAAO;AACLJ,IAAAA,IAAI,EAAEJ;AADD,GAAP;AAGD;AAGD,OAAO,SAASS,iBAAT,CAA2BC,KAA3B,EAAkCC,KAAlC,EAAyC;AAC9C,SAAO;AACLP,IAAAA,IAAI,EAAEN,oBADD;AAELS,IAAAA,OAAO,EAAE;AAAEG,MAAAA,KAAK,EAAEA,KAAT;AAAgBC,MAAAA,KAAK,EAAEA;AAAvB;AAFJ,GAAP;AAID;AAED,OAAO,SAASC,YAAT,GAAwB;AAE7B,SAAO,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAC7B,QAAIC,MAAM,GAAGD,QAAQ,GAAGE,QAAX,CAAoBC,IAApB,CAAyBF,MAAtC;AAEQF,IAAAA,QAAQ,CAACL,eAAe,EAAhB,CAAR;AAEAP,IAAAA,GAAG,CAACiB,GAAJ,CAAQ,IAAR,EAAchB,SAAS,CAACiB,YAAxB,EAAsCC,IAAtC,CAA2C,UAACC,QAAD,EAAc;AAEvD,UAAI,OAAOA,QAAP,KAAoB,WAAxB,EAAqC;AACnC,YAAGA,QAAQ,CAACC,MAAT,GAAkB,CAArB,EAAuB;AACnBT,UAAAA,QAAQ,CAACR,eAAe,CAACgB,QAAD,CAAhB,CAAR;AACH;AACF;AACF,KAPD,EAOGE,KAPH,CAOS,UAAAC,GAAG,EAAI,CACf,CARD;AAST,GAdD;AAgBD;AAID,OAAO,SAASC,WAAT,CAAqBR,IAArB,EAA2B;AAChC,SAAO,UAACJ,QAAD,EAAWC,QAAX,EAAwB;AAC7B,QAAIC,MAAM,GAAGD,QAAQ,GAAGE,QAAX,CAAoBC,IAApB,CAAyBF,MAAtC;AAEAd,IAAAA,GAAG,CAACyB,IAAJ,CAASX,MAAT,EAAiBb,SAAS,CAACyB,YAA3B,EAAyCP,IAAzC,CAA8C,UAACC,QAAD,EAAc;AAE1D,UAAI,OAAOA,QAAP,KAAoB,WAAxB,EAAqC;AACnC,YAAGA,QAAQ,CAACC,MAAT,GAAkB,CAArB,EAAuB;AACnBT,UAAAA,QAAQ,CAACR,eAAe,CAACgB,QAAD,CAAhB,CAAR;AACH;AACF;AACF,KAPD,EAOGE,KAPH,CAOS,UAAAC,GAAG,EAAI,CACf,CARD;AAUA,GAbF;AAcD","sourcesContent":["/**\n * ## Imports\n *\n * The actions supported\n */\nconst {\n  CUSTOMER,\n  ON_FORM_FIELD_CHANGE,\n  CUSTOMER_SUCCESS,\n  CUSTOMER_REQUEST\n} = require(\"../../constants/Customer\").default;\n\n\nimport {api} from \"../../lib/Api\";\nimport CONSTANTS from \"../../lib/constants\"\n\nexport function customerState() {\n  return {\n    type: CUSTOMER\n  };\n}\n\nexport function customerSuccess(json) {\n  return {\n    type: CUSTOMER_SUCCESS,\n    payload: json\n  };\n}\n\nexport function customerRequest() {\n  return {\n    type: CUSTOMER_REQUEST\n  };\n}\n\n\nexport function onFormFieldChange(field, value) {\n  return {\n    type: ON_FORM_FIELD_CHANGE,\n    payload: { field: field, value: value }\n  };\n}\n\nexport function getCustomers() {\n\n  return (dispatch, getState) => {\n    var fields = getState().customer.form.fields;\n\n            dispatch(customerRequest());\n\n            api.get(null, CONSTANTS.ALL_CUSTOMER).then((response) => {\n\n              if (typeof response !== 'undefined') {\n                if(response.length > 0){\n                    dispatch(customerSuccess(response));\n                }\n              }\n            }).catch(err => {\n            });\n  };\n\n}\n\n\n\nexport function addCustomer(form) {\n  return (dispatch, getState) => {\n    var fields = getState().customer.form.fields;\n\n    api.post(fields, CONSTANTS.ADD_CUSTOMER).then((response) => {\n\n      if (typeof response !== 'undefined') {\n        if(response.length > 0){\n            dispatch(customerSuccess(response));\n        }\n      }\n    }).catch(err => {\n    });\n\n   };\n}\n"]},"metadata":{},"sourceType":"module"}