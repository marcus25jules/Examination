{"ast":null,"code":"/**\n * ## Imports\n *\n * The actions supported\n */\nvar _require$default = require(\"../../constants/Customer\").default,\n    CUSTOMER = _require$default.CUSTOMER,\n    ON_FORM_FIELD_CHANGE = _require$default.ON_FORM_FIELD_CHANGE,\n    CUSTOMER_SUCCESS = _require$default.CUSTOMER_SUCCESS;\n\nimport { api } from \"../../lib/Api\";\nimport CONSTANTS from \"../../lib/constants\";\nexport function customerState() {\n  return {\n    type: CUSTOMER\n  };\n}\nexport function customerSuccess(json) {\n  return {\n    type: CUSTOMER_SUCCESS,\n    payload: json\n  };\n}\nexport function onFormFieldChange(field, value) {\n  return {\n    type: ON_FORM_FIELD_CHANGE,\n    payload: {\n      field: field,\n      value: value\n    }\n  };\n}\nexport function getCustomers() {\n  return function (dispatch, getState) {\n    var fields = getState().customer.form.fields;\n    api.get(null, CONSTANTS.ALL_CUSTOMER).then(function (response) {\n      console.log(\"response123:\", response);\n\n      if (typeof response !== 'undefined') {\n        if (response.results.length > 0) {\n          var payload = []; //dispatch(pokemonSuccess(response));\n        }\n      }\n    }).catch(function (err) {//dispatch(pokemonFailure(err));\n    });\n    return fields.data;\n  };\n}\nexport function addCustomer(form) {\n  return function (dispatch, getState) {\n    var fields = getState().customer.form.fields;\n    console.log(fields); // if (typeof form.id !== \"undefined\") {\n    //   var index = fields.data.findIndex(\n    //     (c) => String(c.id) === String(form.id)\n    //   );\n    //   fields.data[index] = form;\n    // } else {\n    //   form.id = fields.lastId;\n    //   fields.data.push(form);\n    //   dispatch(onFormFieldChange(\"lastId\", fields.lastId + 1));\n    // }\n  };\n}\nexport function deleteCustomer(id) {\n  return function (dispatch, getState) {\n    var fields = getState().customer.form.fields;\n\n    if (typeof id !== \"undefined\") {\n      var index = fields.data.findIndex(function (c) {\n        return String(c.id) === String(id);\n      });\n\n      if (index !== -1) {\n        fields.data.splice(index, 1);\n        dispatch(customerSuccess(fields.data));\n      }\n    }\n  };\n}","map":{"version":3,"sources":["/Users/macoybayona/Documents/MyProjects/Examination/src/reducers/customer/actions.js"],"names":["require","default","CUSTOMER","ON_FORM_FIELD_CHANGE","CUSTOMER_SUCCESS","api","CONSTANTS","customerState","type","customerSuccess","json","payload","onFormFieldChange","field","value","getCustomers","dispatch","getState","fields","customer","form","get","ALL_CUSTOMER","then","response","console","log","results","length","catch","err","data","addCustomer","deleteCustomer","id","index","findIndex","c","String","splice"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,uBAIIA,OAAO,CAAC,0BAAD,CAAP,CAAoCC,OAJxC;AAAA,IACEC,QADF,oBACEA,QADF;AAAA,IAEEC,oBAFF,oBAEEA,oBAFF;AAAA,IAGEC,gBAHF,oBAGEA,gBAHF;;AAOA,SAAQC,GAAR,QAAkB,eAAlB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AAEA,OAAO,SAASC,aAAT,GAAyB;AAC9B,SAAO;AACLC,IAAAA,IAAI,EAAEN;AADD,GAAP;AAGD;AAED,OAAO,SAASO,eAAT,CAAyBC,IAAzB,EAA+B;AACpC,SAAO;AACLF,IAAAA,IAAI,EAAEJ,gBADD;AAELO,IAAAA,OAAO,EAAED;AAFJ,GAAP;AAID;AAED,OAAO,SAASE,iBAAT,CAA2BC,KAA3B,EAAkCC,KAAlC,EAAyC;AAC9C,SAAO;AACLN,IAAAA,IAAI,EAAEL,oBADD;AAELQ,IAAAA,OAAO,EAAE;AAAEE,MAAAA,KAAK,EAAEA,KAAT;AAAgBC,MAAAA,KAAK,EAAEA;AAAvB;AAFJ,GAAP;AAID;AAED,OAAO,SAASC,YAAT,GAAwB;AAE7B,SAAO,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAC7B,QAAIC,MAAM,GAAGD,QAAQ,GAAGE,QAAX,CAAoBC,IAApB,CAAyBF,MAAtC;AAGQb,IAAAA,GAAG,CAACgB,GAAJ,CAAQ,IAAR,EAAcf,SAAS,CAACgB,YAAxB,EAAsCC,IAAtC,CAA2C,UAACC,QAAD,EAAc;AAEvDC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,QAA5B;;AAEA,UAAI,OAAOA,QAAP,KAAoB,WAAxB,EAAqC;AAGnC,YAAGA,QAAQ,CAACG,OAAT,CAAiBC,MAAjB,GAA0B,CAA7B,EAA+B;AAC7B,cAAIjB,OAAO,GAAG,EAAd,CAD6B,CAG3B;AACH;AACF;AACF,KAbD,EAaGkB,KAbH,CAaS,UAAAC,GAAG,EAAI,CACZ;AACH,KAfD;AAkBR,WAAOZ,MAAM,CAACa,IAAd;AACD,GAvBD;AA0BD;AAED,OAAO,SAASC,WAAT,CAAqBZ,IAArB,EAA2B;AAChC,SAAO,UAACJ,QAAD,EAAWC,QAAX,EAAwB;AAC7B,QAAIC,MAAM,GAAGD,QAAQ,GAAGE,QAAX,CAAoBC,IAApB,CAAyBF,MAAtC;AAEAO,IAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ,EAH6B,CAK7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGD,GAjBD;AAkBD;AAID,OAAO,SAASe,cAAT,CAAwBC,EAAxB,EAA4B;AACjC,SAAO,UAAClB,QAAD,EAAWC,QAAX,EAAwB;AAC7B,QAAIC,MAAM,GAAGD,QAAQ,GAAGE,QAAX,CAAoBC,IAApB,CAAyBF,MAAtC;;AAEA,QAAI,OAAOgB,EAAP,KAAc,WAAlB,EAA+B;AAC7B,UAAIC,KAAK,GAAGjB,MAAM,CAACa,IAAP,CAAYK,SAAZ,CAAsB,UAACC,CAAD;AAAA,eAAOC,MAAM,CAACD,CAAC,CAACH,EAAH,CAAN,KAAiBI,MAAM,CAACJ,EAAD,CAA9B;AAAA,OAAtB,CAAZ;;AACA,UAAIC,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChBjB,QAAAA,MAAM,CAACa,IAAP,CAAYQ,MAAZ,CAAmBJ,KAAnB,EAA0B,CAA1B;AACAnB,QAAAA,QAAQ,CAACP,eAAe,CAACS,MAAM,CAACa,IAAR,CAAhB,CAAR;AACD;AACF;AACF,GAVD;AAWD","sourcesContent":["/**\n * ## Imports\n *\n * The actions supported\n */\nconst {\n  CUSTOMER,\n  ON_FORM_FIELD_CHANGE,\n  CUSTOMER_SUCCESS\n} = require(\"../../constants/Customer\").default;\n\n\nimport {api} from \"../../lib/Api\";\nimport CONSTANTS from \"../../lib/constants\"\n\nexport function customerState() {\n  return {\n    type: CUSTOMER\n  };\n}\n\nexport function customerSuccess(json) {\n  return {\n    type: CUSTOMER_SUCCESS,\n    payload: json\n  };\n}\n\nexport function onFormFieldChange(field, value) {\n  return {\n    type: ON_FORM_FIELD_CHANGE,\n    payload: { field: field, value: value }\n  };\n}\n\nexport function getCustomers() {\n\n  return (dispatch, getState) => {\n    var fields = getState().customer.form.fields;\n\n\n            api.get(null, CONSTANTS.ALL_CUSTOMER).then((response) => {\n\n              console.log(\"response123:\", response);\n\n              if (typeof response !== 'undefined') {\n\n\n                if(response.results.length > 0){\n                  var payload = [];\n\n                    //dispatch(pokemonSuccess(response));\n                }\n              }\n            }).catch(err => {\n                //dispatch(pokemonFailure(err));\n            });\n\n\n    return fields.data;\n  };\n\n\n}\n\nexport function addCustomer(form) {\n  return (dispatch, getState) => {\n    var fields = getState().customer.form.fields;\n\n    console.log(fields);\n\n    // if (typeof form.id !== \"undefined\") {\n    //   var index = fields.data.findIndex(\n    //     (c) => String(c.id) === String(form.id)\n    //   );\n    //   fields.data[index] = form;\n    // } else {\n    //   form.id = fields.lastId;\n    //   fields.data.push(form);\n    //   dispatch(onFormFieldChange(\"lastId\", fields.lastId + 1));\n    // }\n\n\n  };\n}\n\n\n\nexport function deleteCustomer(id) {\n  return (dispatch, getState) => {\n    var fields = getState().customer.form.fields;\n\n    if (typeof id !== \"undefined\") {\n      var index = fields.data.findIndex((c) => String(c.id) === String(id));\n      if (index !== -1) {\n        fields.data.splice(index, 1);\n        dispatch(customerSuccess(fields.data));\n      }\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}