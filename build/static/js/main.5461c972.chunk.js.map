{"version":3,"sources":["constants/Customer.js","reducers/customer/initialState.js","reducers/customer/reducer.js","reducers/index.js","lib/configureStore.js","components/common/StyledTextField/index.js","components/common/Button/index.js","components/common/Table/index.js","lib/Api.js","reducers/customer/actions.js","containers/customer/index.js","containers/customer/form.js","App.js","index.js","lib/constants.js"],"names":["keyMirror","CUSTOMER","ON_FORM_FIELD_CHANGE","CUSTOMER_SUCCESS","CUSTOMER_REQUEST","CUSTOMER_ERROR","Record","require","Form","state","default","error","isFetching","fields","data","lastId","InitialState","form","initialState","rootReducer","combineReducers","customer","action","merge","type","setIn","payload","field","value","createStoreWithMiddleware","applyMiddleware","logger","thunk","createStore","StyledTextField","label","id","onChange","rest","testID","TextField","defaultProps","StyledButton","Button","variant","StyledTable","rows","columns","pageSize","rowsPerPageOptions","api","axios","defaults","headers","post","baseURL","CONSTANTS","BASE_URL","url","console","log","get","then","response","catch","customerState","customerSuccess","json","customerRequest","onFormFieldChange","getCustomers","dispatch","getState","ALL_CUSTOMER","length","err","addCustomer","ADD_CUSTOMER","deleteCustomer","index","findIndex","c","String","splice","connect","actions","bindActionCreators","customerActions","props","useState","customers","setCustomers","React","history","useHistory","useEffect","style","height","width","align","class","onClick","push","color","headerName","valueGetter","params","getValue","first_name","setFirstName","last_name","setLastName","date_of_birth","setDateOfBirth","email","setEmail","phone_number","setPhoneNumber","address","setAddress","useParams","onSubmit","event","preventDefault","customerForm","target","fullWidth","required","App","exact","path","store","CustomerInitialState","reducer","rootElement","document","getElementById","ReactDOM","render","module","exports","BUILD_VERSION"],"mappings":"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","file":"static/js/main.5461c972.chunk.js","sourcesContent":["import keyMirror from \"keymirror\";\n\nexport default keyMirror({\n  CUSTOMER: null,\n  ON_FORM_FIELD_CHANGE: null,\n  CUSTOMER_SUCCESS: null,\n  CUSTOMER_REQUEST: null,\n  CUSTOMER_ERROR: null,\n});\n","/**\n * ## Imports\n */\nconst { Record } = require(\"immutable\");\nconst { CUSTOMER } = require(\"../../constants/Customer\").default;\n\nconst Form = Record({\n  state: CUSTOMER,\n  error: null,\n  isFetching: true,\n  fields: new (Record({\n    data: [],\n    lastId: 1\n  }))()\n});\n\nvar InitialState = Record({\n  form: new Form()\n});\nexport default InitialState;\n","/**\n * ## Imports\n *\n * The actions supported\n */\nconst InitialState = require(\"./initialState\").default;\n\nconst {\n  ON_FORM_FIELD_CHANGE,\n  CUSTOMER_SUCCESS,\n  CUSTOMER_REQUEST\n} = require(\"../../constants/Customer\").default;\n\nconst initialState = new InitialState();\n\n/**\n * ## Customer Reducer function\n * @param {Object} state - initialState\n * @param {Object} action - type and payload\n */\n\nexport default function customerReducer(state = initialState, action) {\n  if (!(state instanceof InitialState)) return initialState.merge(state);\n\n  switch (action.type) {\n    case CUSTOMER_SUCCESS:\n      return state.setIn([\"form\", \"fields\", \"data\"], action.payload)\n        .setIn([\"form\", \"isFetching\"], false);\n\n    case CUSTOMER_REQUEST:\n      return state.setIn([\"form\", \"isFetching\"], true);\n\n    case ON_FORM_FIELD_CHANGE:\n      const { field, value } = action.payload;\n      return state.setIn([\"form\", \"fields\", field], value);\n\n    default:\n      break;\n  }\n\n  return state;\n}\n","/**\n * # reducers\n *\n * This class combines all the reducers into one\n *\n */\n\n/**\n * ## Imports\n */\nimport customer from \"./customer/reducer\";\nimport { combineReducers } from \"redux\";\n\n/**\n * ## CombineReducers\n * the rootReducer will call each and every reducer with the state and action\n * EVERY TIME there is a basic action\n */\nconst rootReducer = combineReducers({\n  customer\n});\n\nexport default rootReducer;\n","/**\n * # configureStore.js\n */\n\nimport { createStore, applyMiddleware } from \"redux\";\nimport logger from \"redux-logger\"; //added just to show state logs\nimport thunk from \"redux-thunk\"; //added thunk for async tasks\n\nimport reducer from \"../reducers\";\n\nconst createStoreWithMiddleware = applyMiddleware(logger, thunk)(createStore);\n\n/**\n * ## configureStore\n * @param {Object} the state with for keys:\n * contact etc..\n *\n */\n\n \nexport default function configureStore(initialState) {\n  return createStoreWithMiddleware(reducer, initialState);\n}\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PropTypes from \"prop-types\";\n\nconst StyledTextField = ({\n  label = \"\",\n  id = \"\",\n  onChange,\n  value,\n  testID,\n  ...rest\n}) => {\n  return (\n    <TextField\n      {...rest}\n      id={id}\n      label={label}\n      value={value}\n      onChange={onChange}\n    />\n  );\n};\n\nStyledTextField.propTypes = {\n  id: PropTypes.string,\n  onChange: PropTypes.function,\n  value: PropTypes.string,\n  label: PropTypes.string\n};\n\nStyledTextField.defaultProps = {\n  id: \"standard-basic\"\n};\n\nexport default StyledTextField;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from '@material-ui/core/Button';\n\nconst StyledButton = ({ label = \"\", ...rest }) => {\n  return <Button {...rest}>{label}</Button>;\n};\n\nStyledButton.propTypes = {\n  label: PropTypes.string\n};\n\nStyledButton.defaultProps = {\n  variant: \"outlined\"\n};\n\nexport default StyledButton;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { DataGrid } from '@material-ui/data-grid';\n\nconst StyledTable = ({ rows = [], columns = [], pageSize, rowsPerPageOptions, ...rest }) => {\n  return <DataGrid\n       rows={rows}\n       columns={columns}\n       pageSize={pageSize}\n       rowsPerPageOptions={[rowsPerPageOptions]}\n     />\n};\n\n\nStyledTable.propTypes = {\n  rows: PropTypes.array,\n  columns: PropTypes.array,\n  pageSize: PropTypes.number,\n  rowsPerPageOptions: PropTypes.number\n};\n\nexport default StyledTable;\n","'use strict'\n\n\nimport CONSTANTS from \"./constants\"\nimport axios from \"axios\";\n\nexport class Api{\n\n  constructor() {\n     axios.defaults.headers.post['Content-Type'] ='application/json;charset=utf-8';\n     axios.defaults.headers.post['Content-Type'] ='application/x-www-form';\n     axios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\n     axios.defaults.baseURL = CONSTANTS.BASE_URL;\n  }\n\n  //get request\n  get(data, url){\n      if(data === null){\n        data = \"\";\n      }\n      console.log(CONSTANTS.BASE_URL + url);\n      return axios.get(url + data)\n         .then(response => {\n              return response.data;\n         })\n         .catch(error => {\n\n         });\n  };\n\n  //add post method here\n  post(data, url){\n\n    return axios.post(url, data)\n       .then(response => {\n            return response.data;\n       })\n       .catch(error => {\n\n       });\n  }\n\n  //for multiple request add here\n  //.....\n\n}\n\n// The singleton variable\nexport let api = new Api()\n","/**\n * ## Imports\n *\n * The actions supported\n */\nconst {\n  CUSTOMER,\n  ON_FORM_FIELD_CHANGE,\n  CUSTOMER_SUCCESS,\n  CUSTOMER_REQUEST\n} = require(\"../../constants/Customer\").default;\n\n\nimport {api} from \"../../lib/Api\";\nimport CONSTANTS from \"../../lib/constants\"\n\nexport function customerState() {\n  return {\n    type: CUSTOMER\n  };\n}\n\nexport function customerSuccess(json) {\n  return {\n    type: CUSTOMER_SUCCESS,\n    payload: json\n  };\n}\n\nexport function customerRequest() {\n  return {\n    type: CUSTOMER_REQUEST\n  };\n}\n\n\nexport function onFormFieldChange(field, value) {\n  return {\n    type: ON_FORM_FIELD_CHANGE,\n    payload: { field: field, value: value }\n  };\n}\n\nexport function getCustomers() {\n\n  return (dispatch, getState) => {\n    var fields = getState().customer.form.fields;\n\n            dispatch(customerRequest());\n\n            api.get(null, CONSTANTS.ALL_CUSTOMER).then((response) => {\n\n              if (typeof response !== 'undefined') {\n                if(response.length > 0){\n                    dispatch(customerSuccess(response));\n                }\n              }\n            }).catch(err => {\n                //dispatch(pokemonFailure(err));\n            });\n  };\n\n\n}\n\nexport function addCustomer(form) {\n  return (dispatch, getState) => {\n    var fields = getState().customer.form.fields;\n\n    console.log(fields);\n\n    api.post(fields, CONSTANTS.ADD_CUSTOMER).then((response) => {\n\n      if (typeof response !== 'undefined') {\n        if(response.length > 0){\n            dispatch(customerSuccess(response));\n        }\n      }\n    }).catch(err => {\n        //dispatch(pokemonFailure(err));\n    });\n\n\n    // if (typeof form.id !== \"undefined\") {\n    //   var index = fields.data.findIndex(\n    //     (c) => String(c.id) === String(form.id)\n    //   );\n    //   fields.data[index] = form;\n    // } else {\n    //   form.id = fields.lastId;\n    //   fields.data.push(form);\n    //   dispatch(onFormFieldChange(\"lastId\", fields.lastId + 1));\n    // }\n\n\n  };\n}\n\n\n\nexport function deleteCustomer(id) {\n  return (dispatch, getState) => {\n    var fields = getState().customer.form.fields;\n\n    if (typeof id !== \"undefined\") {\n      var index = fields.data.findIndex((c) => String(c.id) === String(id));\n      if (index !== -1) {\n        fields.data.splice(index, 1);\n        dispatch(customerSuccess(fields.data));\n      }\n    }\n  };\n}\n","import React, { useState, useEffect } from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { StyledButton, StyledDialog, StyledTable } from \"../../components\";\nimport \"../../assets/App.css\";\n\n\n\nimport * as customerActions from \"../../reducers/customer/actions\";\n\nfunction mapStateToProps(state) {\n  return {\n    customer: state.customer\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({ ...customerActions }, dispatch)\n  };\n}\n\nconst customerListPage = (props) => {\n  const { customer, actions } = props;\n  const [customers, setCustomers] = useState([]);\n  const [open, setOpen] = React.useState(false);\n  const [id, setId] = React.useState();\n  const history = useHistory();\n\n\n  useEffect(() => {\n    if(customer.form.isFetching){\n      actions.getCustomers();\n    }\n  });\n\n\n  useEffect(() => {\n    setCustomers(customer.form.fields.data);\n  }, [customer.form.fields.data]);\n\n\n  const eventAdd = () => {\n    history.push(\"/form/add\");\n  };\n\n\n  const handleEdit = (id) => {\n    history.push(\"/form/update/\" + id);\n  };\n\n  const columns = [\n    {\n    field: 'fullName',\n    headerName: 'Full name',\n    width: 250,\n    valueGetter: (params) =>\n      `${params.getValue(params.id, 'last_name') || ''}, ${\n        params.getValue(params.id, 'first_name') || ''\n      }`,\n    },\n    { field: 'email', headerName: \"E-mail\", width: 250 },\n    { field: 'date_of_birth', headerName: \"DOB\", width: 250 },\n    { field: 'cust_code', headerName: \"CustCode\", width: 250 }\n  ];\n\n\n  return (\n    <div style={{ height: 400, width: \"100%\" }}>\n    \n      <div align=\"right\" class=\"space\">\n        <StyledButton\n          label=\"Add customer\"\n          onClick={() => {\n            eventAdd();\n          }}\n          color=\"primary\"\n        />\n      </div>\n\n      <StyledTable\n        rows={customers}\n        columns={columns}\n        pageSize={5}\n        rowsPerPageOptions={5}\n      />\n\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(customerListPage);\n","import React, { useState, useEffect } from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { StyledTextField, StyledButton } from \"../../components\";\n\n//actions\nimport * as customerActions from \"../../reducers/customer/actions\";\nimport \"../../assets/App.css\";\n\n/*\n *  Save that state\n */\n\nfunction mapStateToProps(state) {\n  return {\n    customer: state.customer\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({ ...customerActions }, dispatch)\n  };\n}\n\nconst customerFormPage = (props) => {\n  const { customer, actions } = props;\n\n  const [first_name, setFirstName] = useState(\"\");\n  const [last_name, setLastName] = useState(\"\");\n  const [date_of_birth, setDateOfBirth] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone_number, setPhoneNumber] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n\n  const history = useHistory();\n  let { id } = useParams();\n\n  useEffect(() => {\n    var data = customer.form.fields.data;\n    if (typeof id !== \"undefined\") {\n      var index = data.findIndex((c) => String(c.id) === String(id));\n      if (index !== -1) {\n        setFirstName(data[index].first_name);\n        setLastName(data[index].last_name);\n\n        setEmail(data[index].email);\n        setAddress(data[index].address);\n      }\n    }\n  }, [id, customer.form.fields.data]);\n\n  const eventSubmit = (event) => {\n    event.preventDefault();\n\n    var customerForm = {\n      first_name: first_name,\n      last_name: last_name,\n      date_of_birth: date_of_birth,\n      email: email,\n      phone_number: phone_number,\n      address: address\n    };\n\n    actions.addCustomer(customerForm);\n    history.push(\"/\");\n  };\n\n  const eventCancel = (event) => {\n    history.push(\"/\");\n  };\n\n\n  return (\n    <div align=\"center\">\n      <form onSubmit={eventSubmit} class=\"form\">\n        <h1>Add Customer</h1>\n        <div class=\"space\">\n          <StyledTextField\n            label=\"First Name\"\n            value={first_name}\n            onChange={(event) => {\n              setFirstName(event.target.value);\n            }}\n            fullWidth\n            required\n          />\n        </div>\n        <div class=\"space\">\n          <StyledTextField\n            label=\"Last Name\"\n            value={last_name}\n            onChange={(event) => {\n              setLastName(event.target.value);\n            }}\n            fullWidth\n            required\n          />\n        </div>\n        <div class=\"space\">\n          <StyledTextField\n            label=\"Date of Birth\"\n            type=\"date\"\n            value={date_of_birth}\n            onChange={(event) => {\n              setDateOfBirth(event.target.value);\n            }}\n            fullWidth\n            required\n\n          />\n\n        </div>\n        <div class=\"space\">\n          <StyledTextField\n            label=\"E-mail\"\n            value={email}\n            onChange={(event) => {\n              setEmail(event.target.value);\n            }}\n            fullWidth\n            type={\"email\"}\n            required\n          />\n        </div>\n\n\n        <div class=\"space\">\n          <StyledTextField\n            label=\"Phone Number\"\n            value={phone_number}\n            onChange={(event) => {\n              setPhoneNumber(event.target.value);\n            }}\n            fullWidth\n            type={\"number\"}\n            required\n          />\n        </div>\n\n        <div class=\"space\">\n          <StyledTextField\n            label=\"Address\"\n            value={address}\n            onChange={(event) => {\n              setAddress(event.target.value);\n            }}\n            fullWidth\n            required\n          />\n        </div>\n\n        <div class=\"space\">\n          <StyledButton type=\"submit\" label=\"Submit\" />{\" \"}\n          <StyledButton\n            label=\"Cancel\"\n            onClick={() => {\n              eventCancel();\n            }}\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(customerFormPage);\n","import \"./styles.css\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport CustomerList from \"./containers/customer\";\nimport CustomerForm from \"./containers/customer/form\";\n\nexport default function App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/:id?\">\n          <CustomerList />\n        </Route>\n        <Route path=\"/form/:mode?/:id?\">\n          <CustomerForm />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./lib/configureStore\";\n\n//Import State\nimport CustomerInitialState from \"./reducers/customer/initialState\";\n\nimport App from \"./App\";\n\nfunction getInitialState() {\n  const _initState = {\n    customer: new CustomerInitialState()\n  };\n  return _initState;\n}\n\nconst store = configureStore(getInitialState());\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <Provider store={store}>\n    <StrictMode>\n      <App />\n    </StrictMode>\n  </Provider>,\n  rootElement\n);\n","module.exports = {\n  ALL_CUSTOMER: \"customer/\",\n  ADD_CUSTOMER: \"customer/add\",\n  BASE_URL: \"http://api.eksengineering.com/api/\",\n  BUILD_VERSION: \"1.0\"\n};\n"],"sourceRoot":""}